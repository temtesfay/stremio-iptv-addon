declare type GenericObject = {
    [key: string]: string | undefined;
};

declare type M3uChannel = {
    tvgId?: string;
    tvgName?: string;
    tvgLanguage?: string;
    tvgLogo?: string;
    tvgUrl?: string;
    tvgRec?: string;
    groupTitle?: string;
    url?: string;
    name?: string;
    timeshift?: string;
    catchup?: string;
    duration?: number;
    catchupDays?: string;
    catchupSource?: string;
    extras?: GenericObject;
};

declare type M3uHeaders = {
    [key: string]: string | undefined;
    xTvgUrl?: string;
    urlTvg?: string;
};

declare type M3uPlaylist = {
    channels: M3uChannel[];
    headers?: M3uHeaders;
};

/**
 * parseM3U
 *
 * Parses an M3U file and returns an `M3uPlaylist` object
 *
 * @param m3uFileContents The contents of the M3U file
 *
 * @example
 * ```ts
 * import { parseM3U } from "@iptv/playlist";
 *
 * const m3u = `#EXTM3U
 * #EXTINF:-1 tvg-id="1" tvg-name="Channel 1" tvg-language="English" tvg-logo="http://example.com/logo.png" group-title="News" tvg-url="http://example.com/tvg.xml" timeshift="1" catchup="default" catchup-days="7" catchup-source="default" x-tvg-url="http://example.com/tvg.xml" url-tvg="http://example.com/tvg.xml" tvg-rec="default",Channel 1
 * http://example.com/stream.m3u8
 * `;
 *
 * const playlist = parseM3U(m3u);
 * ```
 */
export declare function parseM3U(m3uFileContents: string): M3uPlaylist;

/**
 * writeM3U
 *
 * Converts an `M3uPlaylist` object to an M3U file
 *
 * @param playlist The `M3uPlaylist` object to convert
 *
 * @example
 * ```ts
 * import { writeM3U } from "@iptv/playlist";
 *
 * const playlist = {
 *   headers: {
 *     "x-tvg-url": "http://example.com/tvg.xml",
 *   },
 * channels: [{
 *     tvgId: "1",
 *     tvgName: "Channel 1",
 *     tvgLanguage: "English",
 *     tvgLogo: "http://example.com/logo.png",
 *     groupTitle: "News",
 *     name: "Channel 1",
 *     url: "http://server:port/channel1",
 *   }],
 * };
 *
 * const m3u = writeM3U(playlist);
 * ```
 */
export declare function writeM3U(playlist: M3uPlaylist): string;

export { }
